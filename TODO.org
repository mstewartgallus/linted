Copyright (C) 2013, 2014 Steven Stewart-Gallus

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Linted -- TODO

* Port to --host=i686-w64-mingw32
* Move away from LINTED_EXIT and such
With the scheme I have now, I should really just syslog and exit.
* Sandbox process by closing accidentally leaked file descriptors
A caller of our process could accidentally leak in file
descriptors. We need to read all leaked in open files from
/proc/self/fd and delete them (or we could just exit with an
error). Note that closing all files under getdtablesize or
sysconf(_SC_OPEN_MAX) is not correct because one can lower the rlimit
after already opening a file.
* Sanitize environment variables
These may contain sensitive information.
* Avoid deadlock where process blocks on sending message to shutdown process
* Think about whether to use -Wa,--noexecstack and -Wl,-z,noexecstack
I think I read somewhere that these force a nonexecutable stack but
that if things are done correctly that the shouldn't be happening
anyways. I believe what I really want is a -Wl,--warn-execstack
option.
* Make spawner forks check passed in sockets
Because the spawner forks off processes the current protocol isn't so
bad but there should be a little error checking.
* Don't do cargo cult security
This is pretty much impossible.

I'm just a young hacker playing around with technologies like
sandboxing. I have no real knowledge of security. I hope this project
is useful as a personal learning experience though.
* Don't do security theater
Security theater is when people do big and impressive things with
sandboxing but then conveniently forget a back door that lets
attackers in.

See cargo cult security for why this is impossible.
